package com.tbyf.controller.app.appprovider;

import java.io.UnsupportedEncodingException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.tbyf.controller.base.BaseController;
import com.tbyf.service.gp.provider.impl.ProviderService;
import com.tbyf.util.AppUtil;
import com.tbyf.util.PageData;
import com.tbyf.util.ResultMessageUtil;
import com.tbyf.util.Tools;


/**
 * 相关参数协议：
 * 00	请求失败
 * 01	请求成功
 * 02	返回空值
 * 03	请求协议参数不完整    
 * 04  用户名或密码错误
 * 05  FKEY验证失败
*/
@Controller
@RequestMapping(value="/appProvider")
public class AppProviderController  extends BaseController {
		
	@Resource(name="providerService")
	private ProviderService providerService;
	
	 /**
     * app同机构医护人员查询接口 
     * 
     * @param pageSize 页码 ，pageCount 当前页数，org_code 机构ID，REGIONCODE 区划id, KEYWORDS医护人员姓名
     * @return
     */ 
    @RequestMapping(value="/getProvider",method=RequestMethod.GET)
    @ResponseBody
    public Object queryPage()
    {
        logBefore(logger, "app通过过滤条件（机构编码、行政区划 ，医护人员姓名、医护人员工号）对医护人员（HM_PROVIDER）分页查询接口");
        Map<String,Object> map = new HashMap<String,Object>();
        PageData pd = new PageData();
        pd = this.getPageData();
        String KEYWORDS=(String)pd.get("KEYWORDS");
        byte kbytes[] = null;
		try {                                                //对KEYWORDS中文进行转码
			kbytes = KEYWORDS.getBytes("ISO8859-1");
			KEYWORDS=new String(kbytes, "utf-8");
		    pd.put("KEYWORDS", KEYWORDS);
		} catch (UnsupportedEncodingException e1) {
			e1.printStackTrace();
		}
       
        String result = "00";
        String message="";
        try{	
        	if(Tools.checkKey("ORG_CODE", pd.getString("FKEY"))){	//检验请求key值是否合法
        		if(AppUtil.checkParam("getProvider", pd)){	//检查参数
	        		//如果不传分页参数，给默认值。
	        		int pageSize=1;//页码
	        		int pageCount=10;//页数
	        	 	if(null !=pd.get("PAGESIZE") && null !=pd.get("PAGECOUNT") ){
	               		pd.put("pageStart", (Integer.parseInt(pd.get("PAGESIZE").toString())-1)*Integer.parseInt(pd.get("PAGECOUNT").toString())+1);
	               		pd.put("pageEnd", Integer.parseInt(pd.get("PAGESIZE").toString()) * Integer.parseInt(pd.get("PAGECOUNT").toString()));
	               	}else{
	               		pd.put("pageStart", (pageSize-1)* pageCount+1);
	               		pd.put("pageEnd", pageSize * pageCount);
	               	}
	        		List<PageData> list=providerService.getProviderForApp(pd);
							map.put("pd", list);
							result = "01";
							message =ResultMessageUtil.MESSAGE_1;
        		 }else {
		               result = "03";
					   message =ResultMessageUtil.MESSAGE_3;
		         }
        	}else{
        		result = "05";
				message =ResultMessageUtil.MESSAGE_5;
        	}   
        }catch (Exception e){
			message =ResultMessageUtil.MESSAGE_0;
            logger.error(e.toString(), e);
        }finally{
            map.put("result", result);
            map.put("message", message);
            logAfter(logger);
        }
        return AppUtil.returnObject(new PageData(), map);
    }

}
	
		
