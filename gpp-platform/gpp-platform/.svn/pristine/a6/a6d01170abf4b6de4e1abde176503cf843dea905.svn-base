package com.tbyf.ehrclient.service;

import java.io.File;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

import com.tbyf.util.StringHelper;

/**
 * This class was generated by Apache CXF 3.1.10
 * 2017-04-10T10:58:15.611+08:00
 * Generated source version: 3.1.10
 * 
 */
@WebServiceClient(name = "UserGenerLogicService", 
                  wsdlLocation = "http://127.0.0.1:8081/ehr-webservice/service/UserGenerinfo?wsdl",
                  targetNamespace = "http://impl.service.ehr.tbyf.com/") 
public class UserGenerLogicService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://impl.service.ehr.tbyf.com/", "UserGenerLogicService");
    public final static QName UserGenerLogicPort = new QName("http://impl.service.ehr.tbyf.com/", "UserGenerLogicPort");
    static {
        URL url = null;
        try {
            url = new URL("http://127.0.0.1:8081/ehr-webservice/service/UserGenerinfo?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(UserGenerLogicService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://127.0.0.1:8081/ehr-webservice/service/UserGenerinfo?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public UserGenerLogicService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public UserGenerLogicService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public UserGenerLogicService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public UserGenerLogicService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public UserGenerLogicService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public UserGenerLogicService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns UserGeneralRemote
     */
    @WebEndpoint(name = "UserGenerLogicPort")
    public UserGeneralRemote getUserGenerLogicPort() {
        return super.getPort(UserGenerLogicPort, UserGeneralRemote.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UserGeneralRemote
     */
    @WebEndpoint(name = "UserGenerLogicPort")
    public UserGeneralRemote getUserGenerLogicPort(WebServiceFeature... features) {
        return super.getPort(UserGenerLogicPort, UserGeneralRemote.class, features);
    }
    
    public static void main(String[] args) {
   	 URL wsdlURL = UserGenerLogicService.WSDL_LOCATION;  
   	 if (args.length > 0 && args[0] != null && !"".equals(args[0])) {   
   		 File wsdlFile = new File(args[0]);  
   		  try {  
                 if (wsdlFile.exists()) {  
                     wsdlURL = wsdlFile.toURI().toURL();  
                 } else {  
                     wsdlURL = new URL(args[0]);  
                 }  
             } catch (MalformedURLException e) {  
                 e.printStackTrace();  
         }  
   	 }
   	 UserGenerLogicService ss = new UserGenerLogicService(wsdlURL, SERVICE); 
   	 UserGeneralRemote  port = ss.getUserGenerLogicPort();  
   	 StringBuffer str  =new StringBuffer();
	       str.append("<?xml version=\"1.0\" encoding=\"utf-8\"?>");
	       str.append("<request>");
	       str.append("<requestid>110</requestid> ");
	       str.append("<inputvalues>");
	       str.append("<idcode>421125197901253325</idcode>");
	       str.append("</inputvalues>");
	       str.append("</request>");
	       String  inputxml=str.toString();
		   	  String inputxmlbase64;
			try {
				inputxmlbase64 = StringHelper.getBASE64(inputxml.getBytes("utf-8"));
				 String  outpxml= port.getPatientInfo(inputxmlbase64);
		    	  System.out.println(outpxml);  
		    	  System.out.println("111111");  
			} catch (UnsupportedEncodingException e) {
				e.printStackTrace();
			}
   	

	}

}
