package com.tbyf.util.jpush.service;

import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Value;

import com.tbyf.entity.enums.EnumIsUrl;
import com.tbyf.entity.enums.EnumMessageType;
import com.tbyf.util.Const;
import com.tbyf.util.PageData;
import com.tbyf.util.jpush.entity.MemberMessage;

import cn.jpush.api.JPushClient;
import cn.jpush.api.push.PushResult;
import net.sf.json.JSONObject;

/**
 * 极光推送
 * @author zanxc
 * @创建日期2017年8月11日下午3:24:19
 */
public class JPushService {


    public static final int MAX = Integer.MAX_VALUE;
	public static final int MIN = (int) MAX / 2;
	@Value("${appKey}")
	String appKey;
	@Value("${masterSecret}")
	String masterSecret;
	@Value("${maxRetryTime}")
	Integer maxRetryTime;

	private static JPushClient jpush = null;
	//初始化
	private  void init(long timeLive){
		if(timeLive != 0) {
			jpush = new JPushClient(Const.masterSecret, Const.appKey, true, timeLive);
		}
		jpush = new JPushClient(Const.masterSecret, Const.appKey,Const.maxRetryTime);
	}
    /**
     * 向所有设备推送消息
     * 
     * @param memberMessage
     * @return
     */
    public static boolean jPushAllMessage(MemberMessage memberMessage) throws Exception{
        String title = "";
        if (memberMessage.getTitle() != "") {
            title = memberMessage.getTitle();
        }
        String content = memberMessage.getContent();
        String[] registrationIDStr = memberMessage.getDeviceIdStr();
        Map<String, String> extras  = new HashMap<String, String>();
        JSONObject jsonObj = new JSONObject();
        extras.put("IS_URL", Integer.toString(memberMessage.getIsUrl()));//是否有链接
        Integer messageType = memberMessage.getType();//消息的类型（链接的类型）
        extras.put("URL_TYPE", Integer.toString(messageType));//链接的类型
        if(memberMessage.getIsUrl() == EnumIsUrl.NO.getCode()) {//有链接
        	if(messageType == EnumMessageType.NOTIFICTION.getCode()) {//如果是通知公告
        		extras.put("ID", memberMessage.getnID());//参数通知公告ID
        	}
        	else if(messageType == EnumMessageType.STOP.getCode()) {//如果是站内信
        		PageData Pdf = memberMessage.getFHSMS_IDStr();
        		jsonObj.putAll(Pdf);
        		extras.put("fsid", jsonObj.toString());
        	}
        	else if(messageType == EnumMessageType.CONSULT.getCode()) {//咨询消息ID
        		extras.put("CONSULTATION_ID", memberMessage.getCONSULTATION_ID());
        	}
        	else if(messageType == EnumMessageType.JOB.getCode()) {//任务ID
        		extras.put("ID", memberMessage.getjID());//任务ID
        	}
        }
        long timeout = memberMessage.getTime();
        new JPushService().init(timeout);
        //给多个用户发推送
        PushResult pushResult = jpush.sendAndroidNotificationWithRegistrationID(title, content, extras, registrationIDStr);
        if(pushResult.isResultOK()) {
        	System.out.println("消息号:" + pushResult.msg_id+"推送成功");
        	return true;
        }
        else {
        	System.out.println("消息号:" + pushResult.msg_id+"推送失败");
        	return false;
        }
    }
    /**
     * 向单个用户推发消息
     */
    public static boolean jPushOneMessage(MemberMessage memberMessage) throws Exception{
        String content = memberMessage.getContent();
        // 设置环境：true生产环境，false开发环境
        String title = "";
       
        String registrationID = memberMessage.getDeviceId();
        if (memberMessage.getTitle() != "") {
            title = memberMessage.getTitle();
        }
        Map<String, String> extras  = new HashMap<String, String>();
        extras.put("IS_URL", Integer.toString(memberMessage.getIsUrl()));//是否有链接
        Integer messageType = memberMessage.getType();//消息的类型（链接的类型）
        extras.put("URL_TYPE", Integer.toString(messageType));//链接的类型
        if(memberMessage.getIsUrl() == EnumIsUrl.YES.getCode()) {//有链接
        	if(messageType == EnumMessageType.NOTIFICTION.getCode()) {//如果是通知公告
        		extras.put("ID", memberMessage.getnID());//参数通知公告ID
        	}
        	else if(messageType == EnumMessageType.STOP.getCode()) {//如果是站内信
        		extras.put("FHSMS_ID", memberMessage.getFHSMS_ID());
        	}
        	else if(messageType == EnumMessageType.CONSULT.getCode()) {//咨询消息ID
        		extras.put("CONSULTATION_ID", memberMessage.getCONSULTATION_ID());
        	}
        	else if(messageType == EnumMessageType.JOB.getCode()) {//任务ID
        		extras.put("ID", memberMessage.getjID());//任务ID
        	}
        }
        long timeout = memberMessage.getTime();
        new JPushService().init(timeout);
        PushResult pushResult = jpush.sendAndroidNotificationWithRegistrationID(title, content, extras, registrationID);
        jpush.wait(30);
        if(pushResult.isResultOK()) {
        	System.out.println("消息号:" + pushResult.msg_id+"推送成功");
        	return true;
        }
        else {
        	System.out.println("消息号:" + pushResult.msg_id+"推送失败");
        	return false;
        }
        
        
    }
   public static void main(String[] args) throws Exception {
	   String[] res = {"160a3797c831a128d5d"};
	   MemberMessage memberMessage = new MemberMessage();
	   memberMessage.setTitle("推送测试");
	   memberMessage.setContent("qhfjanhfjds");
	   memberMessage.setDeviceIdStr(res);
	   memberMessage.setIsUrl(1);
	   memberMessage.setType(1);
	   memberMessage.setTime(10);
	   jPushAllMessage(memberMessage);
}        
}
